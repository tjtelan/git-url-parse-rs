name: Release-plz

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  # Release unpublished packages.
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'tjtelan' }}
    permissions:
      contents: write
    steps:
      - &checkout
        name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true
      - &install-rust
        name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # Create a PR with the new versions and changelog, preparing the next release.
  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'tjtelan' }}
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - *checkout
      - *install-rust
      - name: Run release-plz
        uses: release-plz/action@v0.5
        id: release-plz
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Install cargo-msrv and update MSRV in Cargo.toml
        timeout-minutes: 10
        run: |
          cargo install cargo-msrv
          cargo msrv find --write-msrv
      - name: Install cargo-rdme and update readme
        run: |
          cargo install cargo-rdme
          cargo rdme
      - name: Update msrv and/or readme in the release PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR: ${{ steps.release-plz.outputs.pr }}
        run: |
          set -e

          pr_number=${{ fromJSON(steps.release-plz.outputs.pr).number }}
          if [[ -n "$pr_number" ]]; then
            gh pr checkout $pr_number
            # change "echo" with your commands
            git add .
            git commit -m "ci: Update msrv and/or readme"
            git push
          fi