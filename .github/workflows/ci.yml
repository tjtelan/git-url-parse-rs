name: CI

on:
  push:
    branches:
      - staging
      - trying
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cargo_checks:
          - name: Enforce default cargo fmt
            subcommand: fmt -- --check
          - name: Clippy
            subcommand: clippy
          - name: Test
            subcommand: test --verbose
          - name: Build
            subcommand: build --release --all-features --verbose
    steps:
      - uses: actions/checkout@v2
      - name: Stable with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - name: cargo check - ${{ matrix.cargo_checks.name }}
        run: cargo ${{ matrix.cargo_checks.subcommand }}
  #generate_changelog:
  #  name: Generate changelog
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
  #      with:
  #        fetch-depth: 0
  #    - name: Install Rust
  #      uses: actions-rs/toolchain@v1
  #      with:
  #        toolchain: stable
  #        profile: minimal
  #        override: true
  #    - uses: Swatinem/rust-cache@v1
  #      with:
  #        key: changelog
  #    - name: Generate a changelog
  #      uses: orhun/git-cliff-action@v1
  #      id: git-cliff
  #      with:
  #        config: cliff.toml
  #        args: --verbose
  #      env:
  #        OUTPUT: CHANGELOG-generated.md
  #    - name: Print the changelog
  #      run: cat "${{ steps.git-cliff.outputs.changelog }}"
  #    - name: Upload generated CHANGELOG
  #      uses: actions/upload-artifact@v2
  #      with:
  #        name: CHANGELOG-generated
  #        path: CHANGELOG-generated.md
  #        retention-days: 1

  #commit_changelog:
  #  name: Commit changelog
  #  #if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
  #  needs:
  #    - ci
  #    - generate_changelog
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
  #      with:
  #        fetch-depth: 0
  #    - name: Git branch name
  #      id: git-branch-name
  #      uses: EthanSK/git-branch-name-action@v1
  #    - name: Echo the branch name
  #      run: echo "Branch name ${GIT_BRANCH_NAME}"
  #    - name: Download generated CHANGELOG
  #      uses: actions/download-artifact@v2
  #      with:
  #        name: CHANGELOG-generated
  #        path: /tmp
  #    - name: Copy over changelog
  #      run: cp /tmp/CHANGELOG-generated.md CHANGELOG.md
  #    - uses: EndBug/add-and-commit@v9
  #      with:
  #        add: CHANGELOG.md
  #        new_branch: ${{ env.GIT_BRANCH_NAME }}
  #        #new_branch: staging
  #        default_author: github_actions
  #        message: "[skip ci] Update CHANGELOG from Github Actions"

  update-project-stuff:
    uses: ./.github/workflows/update-repo-stuff.yml
    secrets: inherit

  done:
    name: Done
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    needs:
      - ci
      - update-project-stuff
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo "Done!"
